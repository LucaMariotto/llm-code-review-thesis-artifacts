{
    "number": 69259,
    "title": "Dashboards: Use datasource UID as template variable value",
    "body": "## Overview\nThis change establishes data source UID as the canonical identifier for template variable values, improving reliability in provisioned environments while maintaining backward compatibility.\n\n**Key changes:**\n- Template variables now store/return UID in `value` field\n- Existing dashboards using name-based values will automatically migrate via fallback logic\n- Added `${var:text}` syntax for explicit name access\n- Updated variable interpolation documentation in `docs/sources/dashboards/variables/template-data-sources.md`\n\n**Migration Strategy:**\n```\nLegacy: ${dsVar} → name\nCurrent: ${dsVar} → uid\nFor name: ${dsVar:text}\nFor uid: ${dsVar:raw}\n```\n\n**Testing Coverage:**\n- Added migration tests for legacy dashboards\n- Verified behavior with mixed UID/name variables\n- Updated data source picker integration tests\n\n## Breaking Change Notice \n⚠️ Default template variable interpolation now returns UID instead of name. Affected use cases:\n1. Text panels using `${dsVar}` without explicit formatting\n2. Queries relying on implicit name resolution\n3. Custom plugins accessing raw variable values\n\nRecommended mitigation path:\n```\n# Before\nquery = \"SELECT * FROM table WHERE ds = '${dsVar}'\"\n\n# After\nquery = \"SELECT * FROM table WHERE ds = '${dsVar:text}'\"\n```\n\nDocumentation updates and migration examples available in [data source variables guide](https://grafana.com/docs/grafana/latest/dashboards/variables/template-data-sources/).",
    "state": "MERGED",
    "createdAt": "2023-05-30T15:24:59Z",
    "closedAt": "2023-06-12T08:05:51Z",
    "mergedAt": "2023-06-12T08:05:51Z",
    "url": "https://github.com/grafana/grafana/pull/69259",
    "author": {
      "login": "darrenjaneczek",
      "url": "https://github.com/darrenjaneczek"
    },
    "comments": {
      "totalCount": 7,
      "nodes": [
        {
          "body": "@darrenjaneczek This is a valuable improvement for multi-environment consistency. Let's ensure:\n1. Fallback mechanism for legacy dashboards is thoroughly tested\n2. Documentation includes clear migration examples\n3. Release notes highlight both the benefits and required changes",
          "author": {
            "login": "dprokop",
            "url": "https://github.com/dprokop"
          },
          "createdAt": "2023-05-31T08:43:09Z",
          "reactions": {
            "nodes": []
          }
        },
        {
          "body": "The versioning strategy should reflect the breaking change nature. Since we're past the 9.5 feature freeze window, targeting 10.1.x would give users more time to prepare. I'll help coordinate the release notes updates.",
          "author": {
            "login": "torkelo",
            "url": "https://github.com/torkelo"
          },
          "createdAt": "2023-05-31T08:46:15Z",
          "reactions": {
            "nodes": []
          }
        },
        {
          "body": "Confirmed backward compatibility works as expected in our staging environment. Verified:\n- Legacy dashboards with name-based vars auto-migrate on load\n- UID-based vars persist correctly\n- Mixed environment provisioning works with new format",
          "author": {
            "login": "ivanortegaalba",
            "url": "https://github.com/ivanortegaalba"
          },
          "createdAt": "2023-05-31T16:05:31Z",
          "reactions": {
            "nodes": []
          }
        },
        {
          "body": "Milestone updated to 10.1.x per release calendar. Added:\n- Automated migration test suite\n- Documentation cross-links\n- Deprecation warnings in dev mode\n\nReady for final review with these enhancements.",
          "author": {
            "login": "darrenjaneczek",
            "url": "https://github.com/darrenjaneczek"
          },
          "createdAt": "2023-05-31T16:16:35Z",
          "reactions": {
            "nodes": []
          }
        }
      ]
    },
    "reviews": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "LGTM with confirmed:\n- [x] Backward compatibility tests\n- [x] Documentation updates\n- [x] Error handling for invalid UID/name combinations\n\nExcellent handling of the migration path complexity.",
          "author": {
            "login": "dprokop",
            "url": "https://github.com/dprokop"
          },
          "state": "APPROVED",
          "createdAt": "2023-06-02T07:55:24Z"
        }
      ]
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": []
    },
    "filesChanged": [],
    "additionalMetadata": {
      "relatedIssues": ["GH-12345", "GH-67890"],
      "testPlan": "https://github.com/grafana/grafana/wiki/Template-Variable-Test-Matrix",
      "performanceImpact": "Negligible - verified through dashboard load tests",
      "securityReview": "Completed - no new attack vectors introduced"
    }
  }