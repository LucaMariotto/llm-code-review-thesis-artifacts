# Requirements for Thesis: A Model-Agnostic Approach for AI-Powered Code Reviews

# Core Data Handling & Numerics
pandas>=1.5.0
numpy>=1.21.0
scipy>=1.9.0

# Machine Learning & NLP (Main Dependencies)
transformers>=4.30.0
torch>=2.0.0           # Important: Installation often OS/CUDA dependent. See https://pytorch.org/get-started/locally/
sentence-transformers>=2.2.0
bert-score>=0.3.11
scikit-learn>=1.1.0
nltk>=3.7

# Plotting & Visualization
matplotlib>=3.5.0
seaborn>=0.12.0
plotly>=5.9.0
adjustText            # Usually fine with latest

# API Interaction & Progress
requests>=2.28.0
tqdm>=4.60.0

# Specific File Processing & Utilities
ijson>=3.1.0
psutil                # For memory monitoring in pr_scorer.py
textstat              # For readability scores in pr_quality_analyzer.py
rouge-score           # For ROUGE scores in pr_comparer.py
statsmodels>=0.13.0    # For time series decomposition & multi-test correction

# Note: You might need additional dependencies if specific backends for
# torch.compile (like 'inductor') are used heavily or require extra setup.
# 'eager' backend used in pr_scorer.py should be standard.

# For NLTK data (run this in Python after installing nltk):
# import nltk
# nltk.download('vader_lexicon')
# nltk.download('stopwords')
# nltk.download('punkt')
# nltk.download('punkt_tab') # Seems like a typo in pr_quality_analyzer, usually just 'punkt' needed? Included for safety.